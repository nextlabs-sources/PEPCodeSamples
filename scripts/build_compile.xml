<!-- build_compile.xml

Description:
	This ANT script publishes installers and build artifacts to s:/build.
	
	To use this script, you must update properties is <project root>/scripts/build.properties or overide 
	them from commandline (using -D option). For example:
		
		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml
		
	or
		
		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001 
		ant -f scripts/build_publish.xml -v	
-->
<project name="build_compile" default="all" basedir=".">

	<!-- Propery files -->
	<property file="${basedir}/build.properties" />
	<property environment="env" />
	
	<!-- Global properties -->
	<property name="xlib_dir" location="${nlbuildroot}/xlib" />
	<property name="xlib_jar_dir" location="${xlib_dir}/jar" />
	<property name="build_dir" location="${nlbuildroot}/build" />
	<property name="classes_dir" value="${build_dir}/classes" />
	<property name="package_dir" value="${build_dir}/${package_name}" />
	<property name="dist_zip_file_name" value="${package_name}-${base_version}-${build_number}-${build_date_long}.zip" />
	
	<!-- Dump properties -->
	<echoproperties />

	<echo message="INFO: Dump properties completed" />
	
	<!-- Sanity checks -->
	<fail message="nlbuildroot is not set" unless="nlbuildroot" />
	<fail message="nlbuildroot is empty">
		<condition>
			<equals arg1="${nlbuildroot}" arg2="" trim="true" />
		</condition>
	</fail>
	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />
	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />

	<echo message="INFO: Sanity check completed (no error)" />
	
	<path id="compile.classpath">
		<fileset dir="${xlib_jar_dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- Global tasks -->
	<tstamp>
		<format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />
	</tstamp>

	<echo message="base_version = ${base_version}" />
	<echo message="time = ${local.now}" />

	<!-- Targets -->
	<target name="all" description="Default for all" depends="clean, compile, package" />
	
	<target name="clean" description="Delete all build artifacts" depends="">
		<delete includeemptydirs="true" dir="${build_dir}"/>
	</target>

    <target name="compile" description="Compile the project" depends="" >
	
		<mkdir dir="${classes_dir}" />
		
		<javac srcdir="${nlbuildroot}/src" destdir="${classes_dir}" verbose="false">
			<classpath refid="compile.classpath"/>
			<include name="**/*.java" />
        	<exclude name="**/Test*.java" />
        </javac>	
        <jar destfile="${build_dir}/nextlabs-pep-sample.jar" basedir="${classes_dir}">
			<manifest>
				<attribute name="Java-Version" value="${java.version}"/>
				<attribute name="Implementation-Vendor" value="NextLabs, Inc."/>
				<attribute name="Implementation-Title" value="${product_name}"/>
				<attribute name="Implementation-Version" value="${base_version} (${build_number})"/>
				<attribute name="Implementation-Time" value="${local.now}"/>
			</manifest>
		</jar>
	</target>
	
	
	<target name="package" description="builds each plugin module">		
			<mkdir dir="${package_dir}" />
			<mkdir dir="${package_dir}/classes" />
			<mkdir dir="${package_dir}/src" />	
			<mkdir dir="${package_dir}/xlib" />		
			<mkdir dir="${package_dir}/config" />			    	
			<mkdir dir="${package_dir}/scripts" />
			<mkdir dir="${package_dir}/policy" />
			
				
			<copy todir="${package_dir}" overwrite="true">
				<fileset file="${nlbuildroot}/config/README.MD" />
				<fileset file="${nlbuildroot}/config/GETTING_STARTED.html" />
			</copy>
		
			<copy todir="${package_dir}/classes" overwrite="true">
				<fileset dir="${classes_dir}">
				</fileset>
			</copy>
		
			<copy todir="${package_dir}/src" overwrite="true">
				<fileset dir="${nlbuildroot}/src">
				</fileset>
			</copy>
							
			<copy todir="${package_dir}/xlib" overwrite="true">
				<fileset dir="${xlib_jar_dir}">
				</fileset>
			</copy>
								
			<copy todir="${package_dir}/config" overwrite="true">
				<fileset dir="${nlbuildroot}/config/">
					<include name="*.properties"/>
				</fileset>
			</copy>
		    	
			<copy todir="${package_dir}/scripts" overwrite="true">
				<fileset dir="${nlbuildroot}/scripts">
					<include name="cloudaz_request.bat"/>
					<include name="cloudaz_request.sh"/>
				</fileset>
			</copy>
		
			<copy todir="${package_dir}/policy" overwrite="true">
				<fileset dir="${nlbuildroot}/scripts">
					<include name="sample_policy.bin"/>
				</fileset>
			</copy>
		
			<fixcrlf srcdir="${package_dir}/scripts" includes="**/*.*" 
								eol="unix" eof="remove" />	
		
			<fixcrlf srcdir="${package_dir}/config" includes="**/*.*" 
						eol="unix" eof="remove" />
		
		
			<zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8"> 
				<fileset dir="${build_dir}"> 
					<include name="${package_name}/**" />
				</fileset>				
			</zip>
		
		</target>

</project>

